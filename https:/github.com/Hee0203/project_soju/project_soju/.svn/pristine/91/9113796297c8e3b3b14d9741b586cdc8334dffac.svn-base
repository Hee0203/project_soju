*{margin: 0 auto; padding: 0;}
body{
    /* 1vh는 높이값의 100분 1단위입니다.
        예를 들어 브라우저 높이값이 900px
        일때 1vh 는 9px라는 뜻입니다.
    */
    height: 100vh;
    background-color: seagreen;
    text-align: center;
}
.login_form{
    position: relative;
    top: 40%;
    width: 400px;
}

.int-area{
    width: 400px;
}
.int-area input{
    width: 100%;
    /* 수정1 */
    padding: 40px 10px 10px;
    background-color: transparent;
    border: none;
    border-bottom: 1px solid #999;
    font-size: 18px;
    color: #fff;
}
.int-area input:focus{
    outline:none;
}
.int-area > label{
    /* 수정2 */
    /* position: relative;*/
    position: absolute;
    top: -30px;
    left: -150px;
    font-size: 18px;
    color: white;
}
/* 수정3 */
/* .login_form label[for="mem_id"]{
    left: -165px;
} */

/* 수정4 */
.login_form label[for="mem_id"]{
    top: 70px;
    left: 10px;
}
/* 수정5 */
.login_form label[for="mem_pw"]{
    top: 140px;
    left: 10px;
}


.btn-area > button{
    /* 수정6 */
    /* width: 100%; */
    width: 420px;
    height: 50px;
    color: seagreen;
    font-size: 20px;
    border: none;
    border-radius: 25px;
    background-color: #fff;
    /* 수정7 */
    margin-top: 30px;
    padding: 0 10px 0;
    cursor: pointer;
}
.caption_ul{
    display: flex;
    margin-top: 20px;
    margin-left: 20px;
}
.caption_ul > li{
    list-style: none;
    font-size: 20px;
}
.login_img{
    width: 200px;
    height: 200px;
    display: flex;
    margin-top: 150px;
}


.caption a{
    font-size: 20px;
    color: #fff;
    text-decoration: none;
}

/* 수정8 */
/* .int-area input:focus + label{ */
.int-area input[name='mem_id']:focus + label{
    /* 수정9 */
    /* top: -52px; */
    top: 50px;
    font-size: 13px;
    color: #fff;
}
/* 수정10 */
.int-area input[name='mem_pw']:focus + label{
    top: 120px;
    font-size: 13px;
    color: white;
}


.int-area label{
    transition: all .5s ease;
    /* transition: all 은 top -52px로 이동될때
        모든 옵션(all)에 대해서 애니매이션 효과를 발생
        0.5초동안 ease 효과가 천천히 시작되어 
        중간에 빨라지고 다시 느려짐
    */
}
/* 입력값이 있을 경우 label태그는 고정하기 */
/* 수정11 */
/* .int-area input:valid + label{ */
.int-area input[name='mem_id']:valid + label{
    /* 수정12 */
    /* top: -52px; */
    top: 50px;
    font-size: 13px;
    color: white;
}

/* 수정13 */
.int-area input[name='mem_pw']:valid + label{
    top: 120px;
    font-size: 13px;
    color: white;
}

/* 버튼클릭액션 */
#btn_id:active{
	color: black;
}
.caption_ul a:active{
    color: black !important;
}

/* position: relative 스크롤 처리; */
.login_form{
    position: fixed;
    left: calc( 50% - 200px);
}

/* id, pw 입력안했을 경우 */
.int-area label.warning{
    color: red;
    /* 애니메이션이 한 사이클을 완료하는 데 걸리는 시간을 지정합니다. */
    animation-duration: .3s ease;
}




/* 
트랜지션 
    요소의 변화를 일정 기간(duration)동안 일어나게 함
    자동으로 발동되지 않음 (hover나 onclick 같은 이벤트 트리거에 의해 동작함)

애니메이션
    트랜지션은 시작하기 위해 이벤트가 필요하지만
    애니메이션은 시작하기 위해 별도의 설정이 필요없고 한 번 정의하면 자동으로 시작한다.
     

트랜스폼(Transform)
    요소의 이동, 회전, 확대축소, 비틀기 효과를 제공하는 함수

WebGL
    WebGL 기술을 이용하면 더욱 고품질의 3D를 웹에서 구현할 수 있음
*/